@using Microsoft.AspNetCore.Components.Forms
@code {

    enum LetterState
    {
        None,
        Right,
        RightWrong
    }
    
    private LetterState letter1State = LetterState.None;
    private LetterState letter2State = LetterState.None;
    private LetterState letter3State = LetterState.None;
    private LetterState letter4State = LetterState.None;
    private LetterState letter5State = LetterState.None;

    private InputText letter1;
    private InputText letter2;
    private InputText letter3;
    private InputText letter4;
    private InputText letter5;
    
    private string letter1Value = "";
    private string letter2Value = "";
    private string letter3Value = "";
    private string letter4Value = "";
    private string letter5Value = "";
    
    // public List<char>

    public string letters = "";
    private void LetterEntered(string value, int which)
    {
        letters += value;

        switch (which)
        {
            case 1: 
                letter2.Element.Value.FocusAsync();
                break;
            case 2: 
                letter3.Element.Value.FocusAsync();
                break;
            case 3: 
                letter4.Element.Value.FocusAsync();
                break;
            case 4: 
                letter5.Element.Value.FocusAsync();
                break;
            case 5:
                break;

        }
    }

    private void LetterClicked(int which)
    {
        switch (which)
        {
            case 1:
                letter1State = SetState(letter1State);
                break;
            case 2:
                letter2State = SetState(letter2State);
                break;
            case 3:
                letter3State = SetState(letter3State);
                break;
            case 4:
                letter4State = SetState(letter4State);
                break;
            case 5:
                letter5State = SetState(letter5State);
                break;
        }
    }

    private LetterState SetState(LetterState currentState)
    {
        return currentState switch
        {
            LetterState.None => LetterState.Right,
            LetterState.Right => LetterState.RightWrong,
            _ => LetterState.None
            };
    }

        private const string InputNoneStyle = "color: black;";
        private const string InputCorrectStyle = "background-color: green; color: white;";
        private const string InputRightLetterWrongPlaceStyle = "background-color: none; border: 1px solid red; color; black;";

    

    private static string GetStyleForState(LetterState letterState)
    {
        return letterState switch
        {
            LetterState.Right => InputCorrectStyle,
            LetterState.RightWrong => InputRightLetterWrongPlaceStyle,
            _ => InputNoneStyle
            };
    }

}

<div class="wordle-row">
    <InputText maxlength="1" class="wordle-box" @ref="letter1" name="letter1" @bind-Value="letter1Value" @oninput="(args)=>LetterEntered(args.Value.ToString(), 1)" @onclick="() => LetterClicked(1)" style="@GetStyleForState(letter1State)" />
    <InputText maxlength="1" class="wordle-box" @ref="letter2" name="letter2" @bind-Value="letter2Value" @oninput="(args)=>LetterEntered(args.Value.ToString(), 2)" @onclick="() => LetterClicked(2)" style="@GetStyleForState(letter2State)" />
    <InputText maxlength="1" class="wordle-box" @ref="letter3" name="letter3" @bind-Value="letter3Value" @oninput="(args)=>LetterEntered(args.Value.ToString(), 3)" @onclick="() => LetterClicked(3)" style="@GetStyleForState(letter3State)" />
    <InputText maxlength="1" class="wordle-box" @ref="letter4" name="letter4" @bind-Value="letter4Value" @oninput="(args)=>LetterEntered(args.Value.ToString(), 4)" @onclick="() => LetterClicked(4)" style="@GetStyleForState(letter4State)" />
    <InputText maxlength="1" class="wordle-box" @ref="letter5" name="letter5" @bind-Value="letter5Value" @oninput="(args)=>LetterEntered(args.Value.ToString(), 5)" @onclick="() => LetterClicked(5)" style="@GetStyleForState(letter5State)" />
</div>
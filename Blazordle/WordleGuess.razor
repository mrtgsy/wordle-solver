@using Microsoft.AspNetCore.Components.Forms
@inject GuessService GuessService;

@code {

    private List<Letter> Letters { get; } =
    [
        new Letter(1),
        new Letter(2),
        new Letter(3),
        new Letter(4),
        new Letter(5)
    ];

    private async Task LetterEntered(Letter letter)
    {
        if (letter.Position != 5)
        {
            var next = Letters.First(x => x.Position == letter.Position + 1);
            if (next.Input.Element != null)
            {
                await next.Input.Element.Value.FocusAsync();
            }
        }
    }

    private void LetterClicked(Letter letter)
    {
        // janky hack to avoid that initial focus when nothing's been entered yet
        if (string.IsNullOrEmpty(letter.Value)) return;
        letter.SetState();
        
        // tell the parent page
        GuessService.AddUpdateGuess(letter);
    }

    private const string InputNoneStyle = "background-color: white; color: black;";
    private const string InputCorrectStyle = "background-color: green; color: white;";
    private const string InputRightLetterWrongPlaceStyle = "background-color: orange; color; white;";
    private const string InputWrongStyle = "background-color: grey; color; white;";

    private static string GetStyleForState(Letter.LetterState letterState)
    {
        return letterState switch
        {
            Letter.LetterState.Right => InputCorrectStyle,
            Letter.LetterState.RightWrong => InputRightLetterWrongPlaceStyle,
            Letter.LetterState.Wrong => InputWrongStyle,
            _ => InputNoneStyle
        };
    }
}

<div class="wordle-row">
    @foreach (var letter in Letters)
    {
        <InputText maxlength="1" class="wordle-box" @key="letter" @ref="letter.Input" name="@letter.Name" @bind-Value="letter.Value" @oninput="_ => LetterEntered(letter)" @onclick="() => LetterClicked(letter)" style="@GetStyleForState(letter.State)"/>
    }
</div>